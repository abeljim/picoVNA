# output binary
BIN := rpi_vna.out

# source files
MAIN_SRCS := main.c
USB_SRCS := vna_device.c
BT_SRCS := vna_bluetooth.c vna_service.c

# files included in the tarball generated by 'make dist' (e.g. add LICENSE file)
DISTFILES := $(BIN)

# intermediate directory for generated object files
OBJDIR := .o
# intermediate directory for generated dependency files
DEPDIR := .d

# object files, auto generated from source files
USB_OBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(USB_SRCS)))
BT_OBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(BT_SRCS)))
MAIN_OBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(MAIN_SRCS)))

# dependency files, auto generated from source files
USB_DEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(USB_SRCS)))
BT_DEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(BT_SRCS)))
MAIN_DEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(MAIN_SRCS)))

# compilers (at least gcc and clang) don't create the subdirectories automatically
$(shell mkdir -p $(dir $(MAIN_OBJS)) >/dev/null)
$(shell mkdir -p $(dir $(MAIN_DEPS)) >/dev/null)

bluez_dir := ./bluez-5.52

# C compiler
CC := gcc
# linker
LD := gcc

# C flags
CFLAGS := -std=c99 -I. -I$(bluez_dir) -g -Wall

# linker flags
USB_LDFLAGS := -lserialport
BT_LDFLAGS := -L $(bluez_dir) -lbluetooth -lshared-mainloop -lbluetooth-internal

# flags required for dependency generation; passed to compilers
DEPFLAGS = -MT $@ -MD -MP -MF $(DEPDIR)/$*.Td

# compile C source files
COMPILE.c = $(CC) $(DEPFLAGS) $(CFLAGS) -c -o $@
# postcompile step
POSTCOMPILE = mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d

all: $(BIN)

.PHONY: clean
clean:
	$(RM) -r $(OBJDIR) $(DEPDIR) $(BIN)

$(BIN): $(USB_OBJS) $(BT_OBJS) $(MAIN_OBJS)
	$(LD) $^ -o $@ $(USB_LDFLAGS) $(BT_LDFLAGS)

usb_only.out: $(USB_OBJS) $(MAIN_OBJS)
	$(LD) $^ -o $@ $(USB_LDFLAGS)

$(OBJDIR)/%.o: %.c
$(OBJDIR)/%.o: %.c $(DEPDIR)/%.d
	$(COMPILE.c) $<
	$(POSTCOMPILE)

.PRECIOUS: $(DEPDIR)/%.d
$(DEPDIR)/%.d: ;

-include $(USB_DEPS)
-include $(BT_DEPS)
-include $(MAIN_DEPS)